[1/11] Performing build step for 'bootloader'
[1/1] cd /home/cold/esp/learning_components/build/bootloader/esp-idf/esptool_py && /home/cold/.espressif/python_env/idf5.0_py3.11_env/bin/python /home/cold/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/cold/esp/learning_components/build/bootloader/bootloader.bin
Bootloader binary size 0x6700 bytes. 0x900 bytes (8%) free.
[2/11] Building C object esp-idf/blink/CMakeFiles/__idf_blink.dir/blink.c.obj
[3/11] No install step for 'bootloader'
[4/11] Completed 'bootloader'
[5/11] Linking C static library esp-idf/blink/libblink.a
[6/11] Linking C static library esp-idf/main/libmain.a
[7/11] Generating ld/sections.ld
[8/11] Building C object CMakeFiles/learning_components.elf.dir/project_elf_src_esp32.c.obj
[9/11] Linking CXX executable learning_components.elf
[10/11] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/cold/esp/learning_components/build/learning_components.bin
[11/11] cd /home/cold/esp/learning_components/build/esp-idf/esptool_py && /home/cold/.espressif/python_env/idf5.0_py3.11_env/bin/python /home/cold/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/cold/esp/learning_components/build/partition_table/partition-table.bin /home/cold/esp/learning_components/build/learning_components.bin
learning_components.bin binary size 0x2b650 bytes. Smallest app partition is 0x100000 bytes. 0xd49b0 bytes (83%) free.
